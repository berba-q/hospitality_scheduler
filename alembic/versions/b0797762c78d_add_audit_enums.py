"""add audit enums

Revision ID: b0797762c78d
Revises: 50795cc19e4e
Create Date: 2025-08-21 13:41:36.517141

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b0797762c78d'
down_revision: Union[str, Sequence[str], None] = '50795cc19e4e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Ensure the PostgreSQL enum type exists with the correct (lowercase) values
    op.execute(
        """
        DO $$
        BEGIN
            IF NOT EXISTS (
                SELECT 1
                FROM pg_type t
                JOIN pg_namespace n ON n.oid = t.typnamespace
                WHERE t.typname = 'auditevent' AND n.nspname = 'public'
            ) THEN
                CREATE TYPE public.auditevent AS ENUM (
                    'login_success',
                    'login_failed',
                    'login_failed_locked',
                    'logout',
                    'signup_success',
                    'signup_failed',
                    'password_changed',
                    'password_reset_requested',
                    'password_reset_success',
                    'password_reset_failed',
                    'account_locked',
                    'account_unlocked',
                    'account_deactivated',
                    'account_reactivated',
                    'session_created',
                    'session_revoked',
                    'all_sessions_revoked',
                    'session_expired',
                    'permission_granted',
                    'permission_revoked',
                    'role_changed',
                    'sensitive_data_accessed',
                    'bulk_data_export',
                    'suspicious_activity',
                    'rate_limit_exceeded',
                    'system_startup',
                    'system_shutdown',
                    'system_error',
                    'system_maintenance',
                    'unauthorized_access',
                    'security_policy_violation',
                    'brute_force_detected',
                    'ip_blocked',
                    'admin_login',
                    'admin_action',
                    'user_impersonation',
                    'bulk_user_action',
                    'api_key_created',
                    'api_key_revoked',
                    'api_rate_limited',
                    'webhook_failed',
                    'data_exported',
                    'data_imported',
                    'data_deleted',
                    'backup_created',
                    'gdpr_request',
                    'data_retention_applied',
                    'audit_log_exported',
                    'compliance_report_generated'
                );
            END IF;
        END$$;
        """
    )

    # Cast the column from TEXT/VARCHAR to the enum
    op.execute(
        """
        ALTER TABLE auditlog
        ALTER COLUMN event_type TYPE public.auditevent
        USING (
            CASE WHEN event_type IS NULL THEN NULL ELSE event_type::public.auditevent END
        );
        """
    )

    # Backfill NULLs with an existing enum value to avoid transaction issues with new enum members
    op.execute("UPDATE auditlog SET event_type = 'system_startup' WHERE event_type IS NULL;")
    
    # Set NOT NULL to match the model
    op.execute("ALTER TABLE auditlog ALTER COLUMN event_type SET NOT NULL;")
    op.create_index(op.f('ix_passwordhistory_created_at'), 'passwordhistory', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_passwordhistory_created_at'), table_name='passwordhistory')
    # Convert back to TEXT (do not drop the enum type to avoid affecting other objects)
    op.execute(
        """
        ALTER TABLE auditlog
        ALTER COLUMN event_type DROP NOT NULL,
        ALTER COLUMN event_type TYPE TEXT
        USING (event_type::TEXT);
        """
    )
    # ### end Alembic commands ###
