"""add password reset

Revision ID: 34180f11d885
Revises: 7ab32cde80ed
Create Date: 2025-08-17 08:23:27.557040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '34180f11d885'
down_revision: Union[str, Sequence[str], None] = '7ab32cde80ed'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('passwordresettoken',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('token_hash',sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_passwordresettoken_token_hash'), 'passwordresettoken', ['token_hash'], unique=True)
    op.create_index(op.f('ix_passwordresettoken_user_id'), 'passwordresettoken', ['user_id'], unique=False)
    op.create_index('uq_active_reset_token_per_user', 'passwordresettoken', ['user_id'], unique=True, postgresql_where=sa.text('used = false'))
    op.execute("ALTER TABLE auditlog ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE facility ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE facilityrole ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE facilityshift ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE facilityzone ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE notification ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE notificationglobalsettings ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE notificationpreference ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE notificationtemplate ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE profilepictureupload ALTER COLUMN uploaded_at TYPE TIMESTAMP WITH TIME ZONE USING (uploaded_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE schedule ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE scheduleconfig ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE scheduleoptimization ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE scheduletemplate ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE shiftrolerequirement ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE staff ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE staffunavailability ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE swaphistory ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE swaprequest ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE systemsettings ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE userprofile ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    op.execute("ALTER TABLE zoneassignment ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING (created_at AT TIME ZONE 'UTC')")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('zoneassignment', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('userprofile', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('systemsettings', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('swaprequest', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('swaphistory', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('staffunavailability', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('staff', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'utc'::text)"))
    op.alter_column('shiftrolerequirement', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('scheduletemplate', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('scheduleoptimization', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('scheduleconfig', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('schedule', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('profilepictureupload', 'uploaded_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('notificationtemplate', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('notificationpreference', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('notificationglobalsettings', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('notification', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('facilityzone', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('facilityshift', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('facilityrole', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('facility', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('auditlog', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_index('uq_active_reset_token_per_user', table_name='passwordresettoken')
    op.drop_index(op.f('ix_passwordresettoken_user_id'), table_name='passwordresettoken')
    op.drop_index(op.f('ix_passwordresettoken_token_hash'), table_name='passwordresettoken')
    op.drop_table('passwordresettoken')
    # ### end Alembic commands ###
