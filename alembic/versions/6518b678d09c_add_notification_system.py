"""Add notification system

Revision ID: 6518b678d09c
Revises: 4a65d5d25756
Create Date: 2025-07-18 16:06:43.697669

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6518b678d09c'
down_revision: Union[str, Sequence[str], None] = '4a65d5d25756'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Handle existing enums gracefully
    # Import the existing enum types instead of creating new ones
    from sqlalchemy.dialects.postgresql import ENUM
    
    # Reference the existing enums
    notification_type_enum = ENUM(
        'SCHEDULE_PUBLISHED', 'SWAP_REQUEST', 'SWAP_APPROVED', 'SWAP_DENIED', 
        'SCHEDULE_CHANGE', 'SHIFT_REMINDER', 'EMERGENCY_COVERAGE', 
        name='notificationtype',
        create_type=False  # Don't create the type, it already exists
    )
    
    notification_priority_enum = ENUM(
        'LOW', 'MEDIUM', 'HIGH', 'URGENT', 
        name='notificationpriority',
        create_type=False  # Don't create the type, it already exists  
    )
    
    op.create_table('notificationtemplate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('template_name', sa.String(), nullable=False),
    sa.Column('notification_type', notification_type_enum, nullable=False),
    sa.Column('title_template', sa.String(), nullable=False),
    sa.Column('message_template', sa.String(), nullable=False),
    sa.Column('whatsapp_template', sa.String(), nullable=True),
    sa.Column('default_channels', sa.JSON(), nullable=True),
    sa.Column('priority', notification_priority_enum, nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('template_name')
    )
    op.create_table('notificationpreference',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('notification_type', notification_type_enum, nullable=False),
    sa.Column('in_app_enabled', sa.Boolean(), nullable=False),
    sa.Column('push_enabled', sa.Boolean(), nullable=False),
    sa.Column('whatsapp_enabled', sa.Boolean(), nullable=False),
    sa.Column('email_enabled', sa.Boolean(), nullable=False),
    sa.Column('quiet_hours_start', sa.String(), nullable=True),
    sa.Column('quiet_hours_end', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('recipient_user_id', sa.Uuid(), nullable=False),
    sa.Column('recipient_staff_id', sa.Uuid(), nullable=True),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('facility_id', sa.Uuid(), nullable=True),
    sa.Column('notification_type', notification_type_enum, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('priority', notification_priority_enum, nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('action_url', sa.String(), nullable=True),
    sa.Column('action_text', sa.String(), nullable=True),
    sa.Column('channels', sa.JSON(), nullable=True),
    sa.Column('delivery_status', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('is_delivered', sa.Boolean(), nullable=False),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['facility_id'], ['facility.id'], ),
    sa.ForeignKeyConstraint(['recipient_staff_id'], ['staff.id'], ),
    sa.ForeignKeyConstraint(['recipient_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('push_token', sa.String(), nullable=True))
    op.add_column('user', sa.Column('whatsapp_number', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'whatsapp_number')
    op.drop_column('user', 'push_token')
    op.drop_table('notification')
    op.drop_table('notificationpreference')
    op.drop_table('notificationtemplate')
    # ### end Alembic commands ###
