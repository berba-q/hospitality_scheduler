"""add settings and user profiles

Revision ID: 2e9dbb03070c
Revises: 973351c59e6a
Create Date: 2025-07-30 15:41:28.287766

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2e9dbb03070c'
down_revision: Union[str, Sequence[str], None] = '973351c59e6a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notificationglobalsettings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('smtp_enabled', sa.Boolean(), nullable=False),
    sa.Column('smtp_host', sa.String(), nullable=True),
    sa.Column('smtp_port', sa.Integer(), nullable=False),
    sa.Column('smtp_username', sa.String(), nullable=True),
    sa.Column('smtp_password', sa.String(), nullable=True),
    sa.Column('smtp_use_tls', sa.Boolean(), nullable=False),
    sa.Column('smtp_from_email', sa.String(), nullable=True),
    sa.Column('smtp_from_name', sa.String(), nullable=True),
    sa.Column('twilio_enabled', sa.Boolean(), nullable=False),
    sa.Column('twilio_account_sid', sa.String(), nullable=True),
    sa.Column('twilio_auth_token', sa.String(), nullable=True),
    sa.Column('twilio_whatsapp_number', sa.String(), nullable=True),
    sa.Column('push_enabled', sa.Boolean(), nullable=False),
    sa.Column('firebase_server_key', sa.String(), nullable=True),
    sa.Column('email_templates', sa.JSON(), nullable=True),
    sa.Column('whatsapp_templates', sa.JSON(), nullable=True),
    sa.Column('email_rate_limit', sa.Integer(), nullable=False),
    sa.Column('whatsapp_rate_limit', sa.Integer(), nullable=False),
    sa.Column('retry_failed_notifications', sa.Boolean(), nullable=False),
    sa.Column('max_retry_attempts', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auditlog',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('resource_type', sa.String(), nullable=False),
    sa.Column('resource_id', sa.Uuid(), nullable=True),
    sa.Column('changes', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profilepictureupload',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('stored_filename', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(), nullable=False),
    sa.Column('storage_path', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.Column('image_width', sa.Integer(), nullable=True),
    sa.Column('image_height', sa.Integer(), nullable=True),
    sa.Column('thumbnails', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('systemsettings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=False),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('date_format', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('smart_scheduling_enabled', sa.Boolean(), nullable=False),
    sa.Column('max_optimization_iterations', sa.Integer(), nullable=False),
    sa.Column('conflict_check_enabled', sa.Boolean(), nullable=False),
    sa.Column('auto_assign_by_zone', sa.Boolean(), nullable=False),
    sa.Column('balance_workload', sa.Boolean(), nullable=False),
    sa.Column('require_manager_per_shift', sa.Boolean(), nullable=False),
    sa.Column('allow_overtime', sa.Boolean(), nullable=False),
    sa.Column('email_notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('whatsapp_notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('push_notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('schedule_published_notify', sa.Boolean(), nullable=False),
    sa.Column('swap_request_notify', sa.Boolean(), nullable=False),
    sa.Column('urgent_swap_notify', sa.Boolean(), nullable=False),
    sa.Column('daily_reminder_notify', sa.Boolean(), nullable=False),
    sa.Column('session_timeout_hours', sa.Integer(), nullable=False),
    sa.Column('require_two_factor', sa.Boolean(), nullable=False),
    sa.Column('enforce_strong_passwords', sa.Boolean(), nullable=False),
    sa.Column('allow_google_auth', sa.Boolean(), nullable=False),
    sa.Column('allow_apple_auth', sa.Boolean(), nullable=False),
    sa.Column('integrations', sa.JSON(), nullable=True),
    sa.Column('analytics_cache_ttl', sa.Integer(), nullable=False),
    sa.Column('enable_usage_tracking', sa.Boolean(), nullable=False),
    sa.Column('enable_performance_monitoring', sa.Boolean(), nullable=False),
    sa.Column('advanced_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id')
    )
    op.create_table('userprofile',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('avatar_type', sa.String(), nullable=False),
    sa.Column('avatar_color', sa.String(), nullable=False),
    sa.Column('theme', sa.String(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('date_format', sa.String(), nullable=False),
    sa.Column('time_format', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('dashboard_layout', sa.JSON(), nullable=True),
    sa.Column('sidebar_collapsed', sa.Boolean(), nullable=False),
    sa.Column('cards_per_row', sa.Integer(), nullable=False),
    sa.Column('show_welcome_tour', sa.Boolean(), nullable=False),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('quiet_hours_enabled', sa.Boolean(), nullable=False),
    sa.Column('quiet_hours_start', sa.String(), nullable=True),
    sa.Column('quiet_hours_end', sa.String(), nullable=True),
    sa.Column('weekend_notifications', sa.Boolean(), nullable=False),
    sa.Column('profile_visibility', sa.String(), nullable=False),
    sa.Column('show_email', sa.Boolean(), nullable=False),
    sa.Column('show_phone', sa.Boolean(), nullable=False),
    sa.Column('show_online_status', sa.Boolean(), nullable=False),
    sa.Column('preferred_shifts', sa.JSON(), nullable=True),
    sa.Column('max_consecutive_days', sa.Integer(), nullable=True),
    sa.Column('preferred_days_off', sa.JSON(), nullable=True),
    sa.Column('enable_desktop_notifications', sa.Boolean(), nullable=False),
    sa.Column('enable_sound_notifications', sa.Boolean(), nullable=False),
    sa.Column('auto_accept_swaps', sa.Boolean(), nullable=False),
    sa.Column('show_analytics', sa.Boolean(), nullable=False),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=False),
    sa.Column('onboarding_step', sa.Integer(), nullable=False),
    sa.Column('last_help_viewed', sa.DateTime(), nullable=True),
    sa.Column('feature_hints_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userprofile')
    op.drop_table('systemsettings')
    op.drop_table('profilepictureupload')
    op.drop_table('auditlog')
    op.drop_table('notificationglobalsettings')
    # ### end Alembic commands ###
