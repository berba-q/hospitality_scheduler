"""add user device models

Revision ID: 0eec1a73db4e
Revises: 16a4610079a4
Create Date: 2025-08-22 06:44:18.175358

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0eec1a73db4e'
down_revision: Union[str, Sequence[str], None] = '16a4610079a4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('userdevice',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('device_name', sa.String(length=100), nullable=True),
    sa.Column('device_type', sa.String(length=20), nullable=False),
    sa.Column('platform', sa.String(length=50), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('push_token', sa.String(length=500), nullable=True),
    sa.Column('push_failures', sa.Integer(), nullable=False),
    sa.Column('last_push_failure', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_push_success', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('active', 'needs_reauth', 'permission_denied', 'removed', name='devicestatus'), nullable=True),
    sa.Column('needs_permission_prompt', sa.Boolean(), nullable=False),
    sa.Column('permission_denied_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_userdevice_last_seen', 'userdevice', ['last_seen'], unique=False)
    op.create_index('idx_userdevice_push_token', 'userdevice', ['push_token'], unique=False)
    op.create_index('idx_userdevice_status', 'userdevice', ['status'], unique=False)
    op.create_index('idx_userdevice_user_active', 'userdevice', ['user_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_userdevice_push_token'), 'userdevice', ['push_token'], unique=False)
    op.create_index(op.f('ix_userdevice_user_id'), 'userdevice', ['user_id'], unique=False)
    # Drop the now-redundant column on user
    op.drop_column('user', 'push_token')
    op.alter_column('auditlog', 'tenant_id',
               existing_type=sa.UUID(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('auditlog', 'tenant_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_index(op.f('ix_userdevice_user_id'), table_name='userdevice')
    op.drop_index(op.f('ix_userdevice_push_token'), table_name='userdevice')
    op.drop_index('idx_userdevice_user_active', table_name='userdevice')
    op.drop_index('idx_userdevice_status', table_name='userdevice')
    op.drop_index('idx_userdevice_push_token', table_name='userdevice')
    op.drop_index('idx_userdevice_last_seen', table_name='userdevice')
    op.drop_table('userdevice')
    # Re-add push_token on user (legacy compatibility)
    op.add_column('user', sa.Column('push_token', sa.String(length=500), nullable=True))
